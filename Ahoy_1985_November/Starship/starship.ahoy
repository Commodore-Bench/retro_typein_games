1 REM      ***  STARSHIP  ***
2 REM MACHINE LANGUAGE SPRITE MOVEMENT
4 REM ** MOVE TOP OF MEMORY TO MAKE ROOM FOR VIDEO BLOCK AT 32768
5 POKE 55,255:POKE 56,127:POKE 643,255:POKE 644,127:PRINT "[CLEAR]"
6 REM ** DECLARE PRIMARY VARIABLES
7 F$=" ":C0%=0:C1%=0:C2%=0:C3%=0:C4%=0:C5%=0:C6%=0:SP%=0
8 DEF FN PG(X)=INT(X/256):DEF FN LO(X)=X-256*(INT(X/256))
9 REM      *** SET-UP SUBROUTINES ***
10 GOSUB 90:GOSUB 600:REM (VIDEO MEMORY)
12 PRINT "[CLEAR]";:GOSUB 95:GOSUB 700:GOSUB 2000:REM (MACHINE LANGUAGE AND SPRITES)
13 GOSUB 900:REM (SPRITE POSITIONS AND GAME SCREEN)

14 SYS 38067:REM (START INTERRUPT!)

15 REM ** ENABLE SPRITES
16 FOR I=0 TO 29:NEXT:POKE ES,31:REM (SPRITES 0-4)
17 GOTO 100
19 REM ** LOAD SUBROUTINE
20 FOR I=XB TO XE:READ A:POKE I,A:NEXT:PRINT "[RVSON].[RVSOFF]";:RETURN
89 REM TURN OFF SCREEN
90 POKE 53265,0:RETURN
94 REM TURN ON SCREEN (AND EXTENDED BACKGROUND COLOR TEXT MODE)
95 POKE 53265,91:RETURN
98 REM      *** ACTION LOOP ***
100 K=PEEK(653):IF K=7 THEN 300
110 FOR I=1 TO 4:SP%=I:SYS 38336:NEXT
115 PRINT "[HOME][5" "][HOME][DOWN][6" "][HOME][DOWN][DOWN][6" "][HOME][3"[DOWN]"][5" "]"
120 ON C0% GOSUB 200:C0%=0:C4%=0:C5%=0:C6%=0
125 FOR I=1 TO 4:SP%=I:SYS 38336:NEXT
130 IF C1%>0 THEN GOSUB 220:C1%=0
135 IF C2%>0 THEN GOSUB 240:C2%=0
140 IF C3%>0 THEN GOSUB 260:C3%=0
196 GOTO 100
199 REM ** FIREBUTTON ROUTINE GOES HERE
200 PRINT "[HOME]F"
201 IF C4%=1 THEN PRINT "[HOME][RIGHT][RIGHT]!"
202 IF C5%>1 THEN PRINT "[HOME][4"[RIGHT]"]S"
203 IF C6%=1 THEN PRINT "[HOME][6"[RIGHT]"]F"
205 RETURN
220 PRINT "[HOME][3"[DOWN]"]EW"STR$(C1%):RETURN
239 REM ** SPR/SPR COLLISION ROUTINE
240 PRINT "[HOME][DOWN]CS"STR$(C2%):RETURN
259 REM ** SPR/FORE COLLISION ROUTINE
260 PRINT "[HOME][DOWN][DOWN]CF"STR$(C3%):RETURN
296 RETURN
298 REM    *** END HANDLING ***
299 REM ** PUT VIDEO MEMORY BACK TO FIRST BLOCK, AND SCREEN MEMORY TO 1024
300 GOSUB 90:POKE ES,0:REM DISABLE SPRITES
304 REM RESTORE VIDEO/SCREEN MEMORY
305 POKE 56578,PEEK(56578)OR3:POKE 56576,(PEEK(56576)AND 252)OR 3
306 I=PEEK(53272):POKE 53272, 20:K=PEEK(648):POKE 648,4
310 GOSUB 95:PRINT "[CLEAR]QUIT? ([RVSON][s Y][RVSOFF] OR [RVSON][s N][RVSOFF])":PRINT:PRINT
315 GET A$:IF A$="" THEN 315
320 IF A$="Y" THEN PRINT "[HOME]SO LONG, STAR PILOT!":GOTO 370
325 GOSUB 90:POKE 56578,PEEK(56578)OR3:POKE 56576,(PEEK(56576)AND 252)OR 1
330 POKE 53272,I:POKE 648,K:POKE ES,31:GOSUB 95:GOTO 100
370 FOR I= 0 TO 599:NEXT
379 REM ** REENABLE SHIFT/COMMODORE AND RUN-STOP/RESTORE
380 POKE 657,0:POKE 792,71:POKE 808,237
390 SYS 65126
598 REM    *** ARRANGE MEMORY ***
599 REM USE THIRD VIDEO BLOCK (32768 TO 49151), SO ROM CHARACTER SET IS USABLE.
600 VB=32768:POKE 56578,PEEK(56578)OR3:POKE 56576,(PEEK(56576)AND 252)OR 1
601 REM ** TELL VIC-2 WHERE SCREEN IS WITHOUT CHANGING CHARACTER SET LOCATION
602 SB=0:POKE 53272,(SB*16)+4:SB=VB+1024*SB
603 REM ** TELL BASIC WHERE SCREEN IS
604 BB=SB/256:POKE 648,BB
608 REM    *** REGISTER ADDRESSES ***
611 REM ** SPRITE COLOR TABLE
612 CT(0)=53287:FOR I=1 TO 7:CT(I)=CT(I-1)+1:NEXT
613 REM ** SPRITE HORIZONTAL POSITION TABLE (LOW BYTES)
614 HT(0)=53248:FOR I=1 TO 7:HT(I)=HT(I-1)+2:NEXT
615 REM ** SPRITE VERTICAL POSITION TABLE
616 VT(0)=53249:FOR I=1 TO 7:VT(I)=VT(I-1)+2:NEXT
617 REM ** SPRITE HORIZONTAL HIGH-BIT REGISTER
618 HR=53264
619 REM ** SPRITE ENABLE REGISTER
620 ES=53269
621 REM ** VERTICAL EXPANSION REGISTER (1=DOUBLE HEIGHT)
622 VE=53271
623 REM ** HORIZONTAL EXPANSION REGISTER (1=DOUBLE WIDTH)
